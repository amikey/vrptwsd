- returnBestMove so ändern, dass moves bevorzugt werden, die die Veringerung der Fahrzeuganzahl bevorzugen
- isImprovement so ändern, dass es auch akzeptiert, wenn Fahrzeuganzahl reduziert wird, auch wenn Strecke nicht geringer wird oder steigt.
- pruning in cross neighborhood einbauen
- find best move nicht durch sortieren sondern durch if abfrage, jedes mal, wenn neuer feasible move erstellt wird
- in RessourceExtensionFunction Liste der Customer durch ersten und letzten Customer ersetzen (weil clonen O(n) braucht)
- in innerTourMoves auch erlauben, dass zwei Segmente herausgelöst und getauscht werden
- irgendwann auch mal initialen Solver sinnvoll programmieren (nach der ersten Tour werden nur noch Stichfahrten erzeugt)
- beschränke die Länge der Segmente, die getauscht werden können (z.B. maximal 7 Kunden)
- TabuListe vielleicht zu restriktiv? Es gibt ganz viele Iterationen, in denen kein move feasible ist... -> tabu tenure reduzieren? (z.B *1,4...)
- GI: parallelism entfernen